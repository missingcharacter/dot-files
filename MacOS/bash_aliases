# MacOS only aliases and functions
# ricdros' custom aliases
#alias ls='ls -G'
alias ldd='otool -L'
alias update='softwareupdate -l'

function watch () {
  local SECONDS=${1}
  shift
  declare -a COMMANDS=()
  # https://stackoverflow.com/questions/7577052/bash-empty-array-expansion-with-set-u
  COMMANDS=("${@+"${@}"}")
  while true ; do
    clear && echo "Watching ${COMMANDS[*]} every ${SECONDS} seconds" && "${COMMANDS[@]+"${COMMANDS[@]}"}" && sleep "${SECONDS}"
  done
}

function gitgrepreplace () {
  local OLD_TEXT="${1}"
  local NEW_TEXT="${2}"
  local GREP_PATH="${3:-.}"
  local SEPARATOR="${4:-!}"
  local REPLACE="s${SEPARATOR}${OLD_TEXT}${SEPARATOR}${NEW_TEXT}${SEPARATOR}g"
  git grep -l "${OLD_TEXT}" "${GREP_PATH}" | xargs gsed -i "${REPLACE}"
}

function getent() {
  # Trying to make dscacheutil like getent
  # in macOS `man dscacheutil`
  # in Linux `man getent`
  local CATEGORY=${1:-host}
  local QUERY_KEY=${3:-name}
  local QUERY_VALUE=${2}
  dscacheutil -q "${CATEGORY}" -a "${QUERY_KEY}" "${QUERY_VALUE}"
}

function cleancontainers() {
  declare -a exited_containers=() dangling_images=()
  read -ra exited_containers < <(docker ps -qa -f status=exited)
  docker rm "${exited_containers[@]}"
  read -ra dangling_images < <(docker images -qa -f dangling=true)
  docker rmi "${dangling_images[@]}"
}

function cleandockervolumes() {
  declare -a dangling_volumes=()
  read -ra dangling_volumes < <(docker volume ls -f dangling=true -q)
  docker volume rm "${dangling_volumes[@]}"
}

function cleancolima() {
  colima stop
  rm -rf ~/.colima ~/.lima ~/Library/Caches/colima ~/Library/Caches/lima
}

function base64encodestring() {
  local TEXT="${1}"
  base64 <<<"${TEXT}"
}

function base64decodestring() {
  local TEXT="${1}"
  base64 -D <<<"${TEXT}"
}
