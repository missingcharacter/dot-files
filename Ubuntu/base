#!/usr/bin/env bash
# Enable bash's unofficial strict mode
GITROOT=$(git rev-parse --show-toplevel)
. ${GITROOT}/lib/strict-mode
strictMode
# Enabling utils
. ${GITROOT}/lib/utils

function are_basics_installed() {
  local USER_REPLY="${1:-''}"
  local UBUNTU_BASICS=('apt-file' 'apt-transport-https' 'build-essential' 'curl' 'dirmngr' 'gawk' 'git' 'gnupg' 'gnutls-bin' 'inetutils-tools' 'jq' 'libxml2-utils' 'lsb-release' 'parallel' 'software-properties-common' 'tree' 'vim' 'wget' 'xz-utils' 'zlib1g-dev')
  msg_info 'Will run apt update'
  sudo apt update
  msg_info 'Will try to install Ubuntu basics'
  install_if_not_installed UBUNTU_BASICS 'apt' "${USER_REPLY}"
}

function is_ohmyposh_installed() {
  local USER_REPLY="${1:-''}"
  if [[ ! -x $(command -v oh-my-posh &> /dev/null) ]]; then
    are_basics_installed "${USER_REPLY}"
    msg_info "Seem like \"oh-my-posh\" is not installed"
    if [[ "${USER_REPLY}" == 'y' ]]; then
      msg_info 'I will install it righ away'
    elif [[ "${USER_REPLY}" == 'n' ]]; then
      msg_warn 'You already said no, I will not install it'
    else
      read -p 'Want me to install it? ' -n 1 -r USER_REPLY
    fi
    echo
    if [[ ${USER_REPLY} =~ ^[Yy]$ ]]; then
     sudo curl -sL https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -o /usr/local/bin/oh-my-posh
     sudo chmod +x /usr/local/bin/oh-my-posh
    fi
  fi
}

function is_asdf_installed() {
  local USER_REPLY="${1:-''}"
  if [[ ! -x $(which asdf) ]]; then
    # Ubuntu 18.04 `apt install -y libncurses-dev libxslt-dev` gives the output below
    # Note, selecting 'libncurses5-dev' instead of 'libncurses-dev'
    # Note, selecting 'libxslt1-dev' instead of 'libxslt-dev'
    local ASDF_DEPS=('autoconf' 'automake' 'libbz2-dev' 'libffi-dev' 'libncurses5-dev' 'libreadline-dev' 'libsqlite3-dev' 'libssl-dev' 'libtool' 'libxslt1-dev' 'libyaml-dev' 'unixodbc-dev' 'unzip')
    are_basics_installed "${USER_REPLY}"
    msg_info 'Will try to install asdf dependencies'
    install_if_not_installed ASDF_DEPS 'apt' "${USER_REPLY}"
    msg_info 'Will try to install asdf using git'
    git_install_asdf "${USER_REPLY}"
  fi
  msg_info 'Will try to install bash-git-prompt'
  is_ohmyposh_installed "${USER_REPLY}"
}
